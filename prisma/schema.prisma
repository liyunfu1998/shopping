// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

model User {
    id        String    @id @default(auto()) @map("_id") @db.ObjectId
    email     String    @unique
    name      String
    password  String
    role      Role      @default(USER)
    root      Boolean   @default(false)
    mobile    String?
    addresses Address[]
    createdAt DateTime? @default(now())
    updatedAt DateTime? @updatedAt
}

model Address {
    id           String   @id @default(auto()) @map("_id") @db.ObjectId
    postalCode   String
    street       String
    user         User?    @relation(fields: [userId], references: [id])
    userId       String?  @db.ObjectId
    province     Province @relation(fields: [provinceCode], references: [code])
    city         City     @relation(fields: [cityCode], references: [code])
    area         Area     @relation(fields: [areaCode], references: [code])
    provinceCode String
    cityCode     String
    areaCode     String
}

model Province {
    id   String @id @default(auto()) @map("_id") @db.ObjectId
    code String @unique
    name String

    cities  City[]
    Address Address[]
}

model City {
    id           String   @id @default(auto()) @map("_id") @db.ObjectId
    code         String   @unique
    name         String
    province     Province @relation(fields: [provinceCode], references: [code])
    provinceCode String
    areas        Area[]

    Address Address[]
}

model Area {
    id       String @id @default(auto()) @map("_id") @db.ObjectId
    code     String @unique
    name     String
    city     City   @relation(fields: [cityCode], references: [code])
    cityCode String

    Address Address[]
}

model Category {
    id        String     @id @default(auto()) @map("_id") @db.ObjectId
    name      String     @unique
    slug      String     @unique
    image     String
    colors    String[]
    level     Int
    parent    Category?  @relation("CategoryToCategory", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
    parentId  String?    @db.ObjectId
    children  Category[] @relation("CategoryToCategory")
    createdAt DateTime?  @default(now())
    updatedAt DateTime?  @updatedAt
}

enum Role {
    USER
    ADMIN
}
